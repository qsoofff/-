import telebot
from telebot import types
import requests
import sqlite3
import threading
import time
from datetime import datetime
from bs4 import BeautifulSoup
import json

API_TOKEN = '7801752845:AAFIpBnGziEFHa7k8velKBgrGB8oAZMDYRs'  
bot = telebot.TeleBot(API_TOKEN)
API_KEY = "c44af914d54af66d7e3edfd823d7bc88"  
ADMIN_ID = 1620098891  


conn = sqlite3.connect('weather_forecast.db', check_same_thread=False)
cursor = conn.cursor()

cursor.execute('''
CREATE TABLE IF NOT EXISTS subscriptions (
    user_id INTEGER PRIMARY KEY
)
''')
conn.commit()


def get_weather(city):
    try:
        res = requests.get(f"https://api.openweathermap.org/data/2.5/weather?q={city}&appid={API_KEY}&units=metric&lang=ru")
        data = res.json()
        
        if data.get("cod") != 200:
            return None
        
        weather_info = {
            'temp': data["main"]["temp"],
            'feels_like': data["main"]["feels_like"],
            'description': data["weather"][0]["description"],
            'humidity': data["main"]["humidity"],
            'city': data["name"]
        }
        return weather_info
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–≥–æ–¥—ã: {e}")
        return None

def get_eco_news():
    try:
        headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36'}
        news_url = "https://ria.ru/ecology/"
        r = requests.get(news_url, headers=headers, timeout=10)
        soup = BeautifulSoup(r.text, 'html.parser')

        news_elements = soup.select('a.list-item__title.color-font-hover-only')[:3]
        news_list = []
        
        for item in news_elements:
            title = item.get_text(strip=True)
            link = item.get('href', '')
            if link and title:
                news_list.append(f"üì∞ {title}\nüîó {link}")

        return "\n\n".join(news_list) if news_list else "–ù–æ–≤–æ—Å—Ç–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã."
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–æ–≤–æ—Å—Ç–µ–π: {e}")
        return "–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –Ω–æ–≤–æ—Å—Ç–µ–π."


@bot.message_handler(commands=['tp'])
def ask_question(message):
    msg = bot.send_message(message.chat.id, "üìù –ù–∞–ø–∏—à–∏ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å, –∏ –æ–Ω –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.")
    bot.register_next_step_handler(msg, forward_to_admin)

def forward_to_admin(message):
    try:
        user = message.from_user
        question = (
            f"üì© –ù–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:\n\n"
            f"üë§ –ò–º—è: {user.first_name} {user.last_name or ''}\n"
            f"üîó Username: @{user.username or '‚Äî'}\n"
            f"üÜî ID: {user.id}\n\n"
            f"üí¨ –í–æ–ø—Ä–æ—Å:\n{message.text}"
        )
        bot.send_message(ADMIN_ID, question)
        bot.send_message(message.chat.id, "‚úÖ –í–æ–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω! –ú—ã —Å–∫–æ—Ä–æ —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏.")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤–æ–ø—Ä–æ—Å–∞: {e}")
        bot.send_message(message.chat.id, "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤–æ–ø—Ä–æ—Å–∞.")


@bot.message_handler(commands=['start'])
def send_welcome(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add("üå§ –£–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É", "üì∞ –≠–∫–æ-–Ω–æ–≤–æ—Å—Ç–∏")
    markup.add("üåç –ì–ª–æ–±–∞–ª—å–Ω–æ–µ –ø–æ—Ç–µ–ø–ª–µ–Ω–∏–µ", "üí° –ü–æ–ª–µ–∑–Ω—ã–µ —Å–æ–≤–µ—Ç—ã")

    welcome_text = (
        "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –ø—Ä–æ –ø–æ–≥–æ–¥—É –∏ –∫–ª–∏–º–∞—Ç.\n\n"
        "–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ üëá\n"
        "–ò–ª–∏ –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –¥–ª—è –ø—Ä–æ–≥–Ω–æ–∑–∞ –ø–æ–≥–æ–¥—ã!"
    )
    
    bot.send_message(message.chat.id, welcome_text, reply_markup=markup)
    bot.send_message(message.chat.id, "–ß—Ç–æ –±—ã –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –ø–∏—à–∏—Ç–µ /tp")

@bot.message_handler(commands=['subscribe'])
def subscribe(message):
    try:
        cursor.execute('INSERT OR IGNORE INTO subscriptions (user_id) VALUES (?)', (message.chat.id,))
        conn.commit()
        bot.send_message(message.chat.id, "‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –µ–∂–µ–¥–Ω–µ–≤–Ω—É—é —Å–≤–æ–¥–∫—É –æ—Ñ–æ—Ä–º–ª–µ–Ω–∞!")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏: {e}")
        bot.send_message(message.chat.id, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏.")

@bot.message_handler(commands=['unsubscribe'])
def unsubscribe(message):
    try:
        cursor.execute('DELETE FROM subscriptions WHERE user_id = ?', (message.chat.id,))
        conn.commit()
        bot.send_message(message.chat.id, "‚ùå –ü–æ–¥–ø–∏—Å–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø–∏—Å–∫–∏: {e}")
        bot.send_message(message.chat.id, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ –ø–æ–¥–ø–∏—Å–∫–∏.")


@bot.message_handler(content_types=["text"])
def handle_all_messages(message):
    try:
        text = message.text.strip()
        
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫
        if text == "üå§ –£–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É":
            bot.send_message(message.chat.id, "–ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ–≥–Ω–æ–∑–∞ –ø–æ–≥–æ–¥—ã")
            return
        
        elif text == "üì∞ –≠–∫–æ-–Ω–æ–≤–æ—Å—Ç–∏":
            news = get_eco_news()
            bot.send_message(message.chat.id, news)
            return
        
        elif text == "üåç –ì–ª–æ–±–∞–ª—å–Ω–æ–µ –ø–æ—Ç–µ–ø–ª–µ–Ω–∏–µ":
            info = (
                "üåç –ì–ª–æ–±–∞–ª—å–Ω–æ–µ –ø–æ—Ç–µ–ø–ª–µ–Ω–∏–µ\n\n"
                "–≠—Ç–æ —É–≤–µ–ª–∏—á–µ–Ω–∏–µ —Å—Ä–µ–¥–Ω–µ–π —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã –ó–µ–º–ª–∏ –∏–∑-–∑–∞ –ø–∞—Ä–Ω–∏–∫–æ–≤—ã—Ö –≥–∞–∑–æ–≤.\n\n"
                "üå° –û—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:\n"
                "‚Ä¢ –°–∂–∏–≥–∞–Ω–∏–µ —Ç–æ–ø–ª–∏–≤–∞\n‚Ä¢ –í—ã—Ä—É–±–∫–∞ –ª–µ—Å–æ–≤\n‚Ä¢ –ò–Ω–¥—É—Å—Ç—Ä–∏–∞–ª–∏–∑–∞—Ü–∏—è\n\n"
                "üåø –ö–∞–∫ –ø–æ–º–æ—á—å:\n"
                "‚Ä¢ –°–Ω–∏–∑—å—Ç–µ –≤—ã–±—Ä–æ—Å—ã\n‚Ä¢ –≠–∫–æ–Ω–æ–º—å—Ç–µ —Ä–µ—Å—É—Ä—Å—ã"
            )
            bot.send_message(message.chat.id, info)
            return
        
        elif text == "üí° –ü–æ–ª–µ–∑–Ω—ã–µ —Å–æ–≤–µ—Ç—ã":
            tips = (
                "üí° –ü–æ–ª–µ–∑–Ω—ã–µ —ç–∫–æ—Å–æ–≤–µ—Ç—ã:\n\n"
                "1. ‚ö° –≠–∫–æ–Ω–æ–º—å—Ç–µ —ç–ª–µ–∫—Ç—Ä–æ—ç–Ω–µ—Ä–≥–∏—é\n"
                "2. üöå –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ–±—â–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç\n"
                "3. ‚ôªÔ∏è –°–æ—Ä—Ç–∏—Ä—É–π—Ç–µ –º—É—Å–æ—Ä\n"
                "4. üå± –û—Ç–∫–∞–∂–∏—Ç–µ—Å—å –æ—Ç –æ–¥–Ω–æ—Ä–∞–∑–æ–≤–æ–≥–æ –ø–ª–∞—Å—Ç–∏–∫–∞\n"
                "5. üíß –≠–∫–æ–Ω–æ–º—å—Ç–µ –≤–æ–¥—É"
            )
            bot.send_message(message.chat.id, tips)
            return
        
        # –ï—Å–ª–∏ —Ç–µ–∫—Å—Ç –Ω–µ –∫–Ω–æ–ø–∫–∞ –∏ –Ω–µ –∫–æ–º–∞–Ω–¥–∞ - –ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –ø–æ–≥–æ–¥—É
        if len(text) < 50 and not text.startswith('/'):
            bot.send_message(message.chat.id, "‚è≥ –ü–æ–ª—É—á–∞—é –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ...")
            weather_data = get_weather(text)
            
            if weather_data:
                response = (
                    f"üå§ –ü–æ–≥–æ–¥–∞ –≤ {weather_data['city']}:\n"
                    f"üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {round(weather_data['temp'])}¬∞C\n"
                    f"üí≠ –û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: {round(weather_data['feels_like'])}¬∞C\n"
                    f"‚òÅÔ∏è {weather_data['description'].capitalize()}\n"
                    f"üíß –í–ª–∞–∂–Ω–æ—Å—Ç—å: {weather_data['humidity']}%"
                )
            else:
                response = "‚ùå –ì–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–ø–∏—Å–∞–Ω–∏–µ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
            
            bot.send_message(message.chat.id, response)
            return
        
        # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–æ
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –¥–ª—è –ø—Ä–æ–≥–Ω–æ–∑–∞ –ø–æ–≥–æ–¥—ã")
    
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
        bot.send_message(message.chat.id, "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞.")

# –ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞
def daily_forecast_job():
    while True:
        try:
            now = datetime.now()
            if now.hour == 8 and now.minute == 0:
                cursor.execute('SELECT user_id FROM subscriptions')
                subscribers = cursor.fetchall()
                
                for (user_id,) in subscribers:
                    try:
                        bot.send_message(user_id, "üåÖ –î–æ–±—Ä–æ–µ —É—Ç—Ä–æ! –ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∞–∫—Ç—É–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ–≥–Ω–æ–∑–∞ –ø–æ–≥–æ–¥—ã.")
                    except Exception as e:
                        print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {e}")
                
                time.sleep(60)  # –ñ–¥–µ–º 1 –º–∏–Ω—É—Ç—É –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
            else:
                time.sleep(30)  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –≤ daily_forecast_job: {e}")
            time.sleep(60)

# –ó–∞–ø—É—Å–∫ —Ñ–æ–Ω–æ–≤–æ–≥–æ –ø–æ—Ç–æ–∫–∞
forecast_thread = threading.Thread(target=daily_forecast_job, daemon=True)
forecast_thread.start()

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –±–æ—Ç–∞
def start_bot():
    while True:
        try:
            print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
            bot.polling(none_stop=True, interval=1, timeout=30)
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –±–æ—Ç–∞: {e}")
            print("–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥...")
            time.sleep(10)

if __name__ == "__main__":
    start_bot()